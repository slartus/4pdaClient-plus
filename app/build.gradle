apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'


repositories {
    maven { url "https://jitpack.io" }
    mavenCentral()
}

// Create a variable called keystorePropertiesFile, and initialize it to your
// keystore.properties file, in the rootProject folder.
def keystorePropertiesFile = rootProject.file("keystore.properties")

// Initialize a new Properties() object called keystoreProperties.
def keystoreProperties = new Properties()

// Load your keystore.properties file into the keystoreProperties object.
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

android {
    compileSdkVersion 27


    def appVersionCode = 645
    // именование версий:
    // первое число не трогаем никогда. только если весь клиент переписали, но тогда это другой репозиторий
    // второе число только при серьезных изменениях, затрагивающих интерфейс или архитектуру
    // третье число меняется каждый релиз
    // 4 число - ТОЛЬКО фиксы в релизе.
    // новая ветка release - туда попадают только полный новый релиз и только его фиксы
    // после фикса в релизе мержим в мастер.
    // мастер - рабочая ветка для следуюшего релиза

    def appVersionName = "3.5.7.5"

    defaultConfig {
        applicationId 'org.softeg.slartus.forpdaplus'
        minSdkVersion rootProject.minSdk

        //noinspection OldTargetApi
        targetSdkVersion rootProject.targetSdk
        versionCode appVersionCode
        versionName appVersionName
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    dexOptions {
        dexInProcess = true
        preDexLibraries = true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    signingConfigs {
        release {
            keyAlias keystoreProperties['RELEASE_KEY_ALIAS']
            keyPassword keystoreProperties['RELEASE_KEY_PASSWORD']
            storeFile file("keystore.jks")
            storePassword keystoreProperties['RELEASE_STORE_PASSWORD']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }
    flavorDimensions "wtf"
    productFlavors {
        def defaultSigningVariable = signingConfigs.release
        rel {
            applicationId 'org.softeg.slartus.forpdaplus'
            versionCode appVersionCode
            versionName appVersionName
            signingConfig defaultSigningVariable
            dimension "wtf"
        }
        beta {
            applicationId 'org.softeg.slartus.forpdaplus.beta'
            versionCode 647// у беты свой номер, чтобы не инкрементить релизный
            versionName "${appVersionName}beta" //beta - С МАЛЕНЬКОЙ БУКВЫ ПЛЗ.))
            signingConfig defaultSigningVariable
            dimension "wtf"
        }
    }

    android.applicationVariants.all { variant ->
        variant.outputs.all {
            def fileNaming = "ForPDA"
            def vCode = variant.versionCode
            if (vCode < 10)
                vCode = "0" + vCode
            def flavor = variant.productFlavors[0]
            if (flavor.name == "beta")
                outputFileName = "beta.apk"
            else
                outputFileName = "${fileNaming}_${appVersionName}-${variant.buildType.name}.apk"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        disable 'RestrictedApi'
        checkReleaseBuilds false
    }
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
    }
}
dependencies {
    api project(':forpdacommon')
    api project(':forpdanotifyservice')
    api project(':4pdasources')
    api "com.android.support:design:$rootProject.supportLibraryVersion"
    api "com.android.support:appcompat-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:cardview-v7:$rootProject.supportLibraryVersion"
    api "com.android.support:recyclerview-v7:$rootProject.supportLibraryVersion"
    api 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    api 'com.readystatesoftware.sqliteasset:sqliteassethelper:2.0.1'
    api 'com.github.chrisbanes.photoview:library:1.2.4'
    api 'com.nineoldandroids:library:2.4.0'
    api 'com.afollestad.material-dialogs:core:0.9.6.0'
    api 'de.hdodenhof:circleimageview:2.0.0'
    api 'com.dmitriy-tarasov:android-intents:1.1.0'
    api 'com.squareup.picasso:picasso:2.71828'
    api 'ch.acra:acra:4.9.2'
    api 'com.google.code.gson:gson:2.8.5'
    api "com.squareup.okhttp3:okhttp:$rootProject.okhttp3"
    api 'com.jakewharton:butterknife:8.5.1'// TODO: избавиться
    api 'com.github.armcha:Vertical-Intro:2.0.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.0'
    implementation 'io.paperdb:paperdb:2.6'
    implementation "io.reactivex.rxjava2:rxandroid:$rootProject.rxjava2"
    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    implementation 'com.github.pwittchen:reactivenetwork-rx2:0.12.3'
    implementation "com.karumi:dexter:5.0.0"

    testImplementation 'junit:junit:4.12'
    implementation "com.evernote:android-job:1.2.6"
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    annotationProcessor 'com.jakewharton:butterknife-compiler:8.5.1'
}
